"use strict";angular.module("ngEntrust",["ngEntrust.auth","ngEntrust.session"]).run(["$rootScope","Auth","$state",function(t,n,o){t.$on("$stateChangeStart",function(t,o,a,e,s){n.$toState=o,n.$toParams=a,n.$fromState=e,n.$fromParams=s}),t.$on("$stateChangeStart",function(a,e,s,r,u){a.preventDefault(),n.$resolve(),n.$isStateChanging()&&(o.go(e,s,{notify:!1}).then(function(n){t.$broadcast("$stateChangeSuccess",n,s,r,u)}),console.log("transition..."))}),t.$on("$stateChangeSuccess",function(){n.$toState=null,n.$toParams=null,n.$fromState=null,n.$fromParams=null,console.log("done!")})}]);
"use strict";function AuthProvider(){this.$get=["$http","$q","$injector","$rootScope","Session",function(t,e,n,i,s){function o(){var e=this;return this.$isLogged=null,this.$asyncCheck=!0,this.$user=s.getUser(),this.$session=s,this.$counter=0,this.$resolve=function(){var t=this;t.$counter+=1,Object.keys(this.$validators).forEach(function(e){t.$isStateChanging()||n.instantiate(t.$validators[e])})},this.authenticate=function(e){return t.post("/api/auth/local",e)},this.requestProfile=function(){return t.get("/api/auth/profile/request").then(function(t){return s.updateUser(t.data)})},this.destroy=function(){return t.get("/api/auth/destroy")},this.check=function(){return this.$asyncCheck?(this.$user&&(this.$asyncCheck=!1),t.get("/api/auth/check").then(function(t){return e.$isLogged=t.data.result,user&&e.$isLogged||!e.$isLogged?e.$isLogged:e.requestProfile().then(function(t){return t._id&&7===t._id.length?t:void 0})}).finally(function(){setTimeout(function(){e.$asyncCheck=!0},2e3)})):this.$syncCheck},i.$on("$stateChangeStart",function(){e.$stateChangeStart()}),i.$on("$stateChangeSuccess",function(){e.$stateChangeSuccess()}),this}return o.prototype=function(){},o.prototype.$validators={},o.prototype.$getUser=function(){return this.$session.getUser()},o.prototype.$checkSync=function(){return this.$isLogged||!1},o.prototype.$isStateChanging=function(){return this.$transition},o.prototype.$stateChangeStart=function(){this.$transition=!0},o.prototype.$stateChangeSuccess=function(){this.$transition=!1},new function(){return o.apply(o.prototype,arguments)}}]}angular.module("ngEntrust.auth",[]).provider("Auth",AuthProvider);
"use strict";function SessionProvider(){function t(){this.roles=[]}t.prototype.isLogged=function(t,r){this.user?t.call(this,this):r.call(this,this)},t.prototype.__roles__=[],t.prototype.__permissions__=[],t.prototype.can=function(t){var r=this;if(!this.roles)return!1;if(-1!==this.__permissions__.indexOf(t))return!0;var e=!1;return this.permissions.forEach(function(s){s.name===t&&(e=!0,r.__permissions__.push(t))}),e},t.prototype.hasRole=function(t){var r=this;if(!this.roles)return!1;if(-1!==this.__roles__.indexOf(t))return!0;var e=!1;return this.roles.forEach(function(s){s.name===t&&(e=!0,r.__roles__.push(t))}),e},this.$get=["$http","$q",function(r){function e(){return this.user=new t,this}return e.prototype.updateUser=function(t){return angular.extend(this.user,t),this.user},e.prototype.getUser=function(){var t=this;return"object"==typeof this.user&&angular.copy(this.user)||r.get("/api/auth/profile/request").then(function(r){return t.updateUser(r.data)})},new function(){return e.apply(e.prototype,arguments)}}]}angular.module("ngEntrust.session",[]).provider("Session",SessionProvider);